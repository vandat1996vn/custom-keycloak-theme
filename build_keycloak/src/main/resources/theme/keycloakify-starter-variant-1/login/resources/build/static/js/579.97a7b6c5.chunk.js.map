{"version":3,"file":"static/js/579.97a7b6c5.chunk.js","mappings":"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","sources":["keycloak-theme/login/pages/Register.tsx","../node_modules/keycloakify/src/lib/useGetClassName.ts","../node_modules/keycloakify/src/login/lib/useGetClassName.ts","../node_modules/keycloakify/src/tools/clsx.ts","../node_modules/tsafe/src/typeGuard.ts"],"sourcesContent":["// ejected using 'npx eject-keycloak-page'\r\nimport { clsx } from \"keycloakify/tools/clsx\";\r\nimport type { PageProps } from \"keycloakify/login/pages/PageProps\";\r\nimport { useGetClassName } from \"keycloakify/login/lib/useGetClassName\";\r\nimport type { KcContext } from \"../kcContext\";\r\nimport type { I18n } from \"../i18n\";\r\n\r\nexport default function Register(\r\n  props: PageProps<Extract<KcContext, { pageId: \"register.ftl\" }>, I18n>\r\n) {\r\n  const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\r\n\r\n  const { getClassName } = useGetClassName({\r\n    doUseDefaultCss,\r\n    classes,\r\n  });\r\n\r\n  const {\r\n    url,\r\n    messagesPerField,\r\n    register,\r\n    realm,\r\n    passwordRequired,\r\n    recaptchaRequired,\r\n    recaptchaSiteKey,\r\n  } = kcContext;\r\n\r\n  const { msg, msgStr } = i18n;\r\n\r\n  return (\r\n    <Template\r\n      {...{ kcContext, i18n, doUseDefaultCss, classes }}\r\n      headerNode={msg(\"registerTitle\")}\r\n    >\r\n      <form\r\n        id=\"kc-register-form\"\r\n        className={getClassName(\"kcFormClass\")}\r\n        action={url.registrationAction}\r\n        method=\"post\"\r\n      >\r\n        <div\r\n          className={clsx(\r\n            getClassName(\"kcFormGroupClass\"),\r\n            messagesPerField.printIfExists(\r\n              \"firstName\",\r\n              getClassName(\"kcFormGroupErrorClass\")\r\n            )\r\n          )}\r\n        >\r\n          <div className={getClassName(\"kcLabelWrapperClass\")}>\r\n            <label htmlFor=\"firstName\" className={getClassName(\"kcLabelClass\")}>\r\n              {msg(\"firstName\")}\r\n            </label>\r\n          </div>\r\n          <div className={getClassName(\"kcInputWrapperClass\")}>\r\n            <input\r\n              type=\"text\"\r\n              id=\"firstName\"\r\n              className={getClassName(\"kcInputClass\")}\r\n              name=\"firstName\"\r\n              defaultValue={register.formData.firstName ?? \"\"}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className={clsx(\r\n            getClassName(\"kcFormGroupClass\"),\r\n            messagesPerField.printIfExists(\r\n              \"lastName\",\r\n              getClassName(\"kcFormGroupErrorClass\")\r\n            )\r\n          )}\r\n        >\r\n          <div className={getClassName(\"kcLabelWrapperClass\")}>\r\n            <label htmlFor=\"lastName\" className={getClassName(\"kcLabelClass\")}>\r\n              {msg(\"lastName\")}\r\n            </label>\r\n          </div>\r\n          <div className={getClassName(\"kcInputWrapperClass\")}>\r\n            <input\r\n              type=\"text\"\r\n              id=\"lastName\"\r\n              className={getClassName(\"kcInputClass\")}\r\n              name=\"lastName\"\r\n              defaultValue={register.formData.lastName ?? \"\"}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className={clsx(\r\n            getClassName(\"kcFormGroupClass\"),\r\n            messagesPerField.printIfExists(\r\n              \"email\",\r\n              getClassName(\"kcFormGroupErrorClass\")\r\n            )\r\n          )}\r\n        >\r\n          <div className={getClassName(\"kcLabelWrapperClass\")}>\r\n            <label htmlFor=\"email\" className={getClassName(\"kcLabelClass\")}>\r\n              {msg(\"email\")}\r\n            </label>\r\n          </div>\r\n          <div className={getClassName(\"kcInputWrapperClass\")}>\r\n            <input\r\n              type=\"text\"\r\n              id=\"email\"\r\n              className={getClassName(\"kcInputClass\")}\r\n              name=\"email\"\r\n              defaultValue={register.formData.email ?? \"\"}\r\n              autoComplete=\"email\"\r\n            />\r\n          </div>\r\n        </div>\r\n        {!realm.registrationEmailAsUsername && (\r\n          <div\r\n            className={clsx(\r\n              getClassName(\"kcFormGroupClass\"),\r\n              messagesPerField.printIfExists(\r\n                \"username\",\r\n                getClassName(\"kcFormGroupErrorClass\")\r\n              )\r\n            )}\r\n          >\r\n            <div className={getClassName(\"kcLabelWrapperClass\")}>\r\n              <label\r\n                htmlFor=\"username\"\r\n                className={getClassName(\"kcLabelClass\")}\r\n              >\r\n                {msg(\"username\")}\r\n              </label>\r\n            </div>\r\n            <div className={getClassName(\"kcInputWrapperClass\")}>\r\n              <input\r\n                type=\"text\"\r\n                id=\"username\"\r\n                className={getClassName(\"kcInputClass\")}\r\n                name=\"username\"\r\n                defaultValue={register.formData.username ?? \"\"}\r\n                autoComplete=\"username\"\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {passwordRequired && (\r\n          <>\r\n            <div\r\n              className={clsx(\r\n                getClassName(\"kcFormGroupClass\"),\r\n                messagesPerField.printIfExists(\r\n                  \"password\",\r\n                  getClassName(\"kcFormGroupErrorClass\")\r\n                )\r\n              )}\r\n            >\r\n              <div className={getClassName(\"kcLabelWrapperClass\")}>\r\n                <label\r\n                  htmlFor=\"password\"\r\n                  className={getClassName(\"kcLabelClass\")}\r\n                >\r\n                  {msg(\"password\")}\r\n                </label>\r\n              </div>\r\n              <div className={getClassName(\"kcInputWrapperClass\")}>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  className={getClassName(\"kcInputClass\")}\r\n                  name=\"password\"\r\n                  autoComplete=\"new-password\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              className={clsx(\r\n                getClassName(\"kcFormGroupClass\"),\r\n                messagesPerField.printIfExists(\r\n                  \"password-confirm\",\r\n                  getClassName(\"kcFormGroupErrorClass\")\r\n                )\r\n              )}\r\n            >\r\n              <div className={getClassName(\"kcLabelWrapperClass\")}>\r\n                <label\r\n                  htmlFor=\"password-confirm\"\r\n                  className={getClassName(\"kcLabelClass\")}\r\n                >\r\n                  {msg(\"passwordConfirm\")}\r\n                </label>\r\n              </div>\r\n              <div className={getClassName(\"kcInputWrapperClass\")}>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"password-confirm\"\r\n                  className={getClassName(\"kcInputClass\")}\r\n                  name=\"password-confirm\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n        {recaptchaRequired && (\r\n          <div className=\"form-group\">\r\n            <div className={getClassName(\"kcInputWrapperClass\")}>\r\n              <div\r\n                className=\"g-recaptcha\"\r\n                data-size=\"compact\"\r\n                data-sitekey={recaptchaSiteKey}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className={getClassName(\"kcFormGroupClass\")}>\r\n          <div\r\n            id=\"kc-form-options\"\r\n            className={getClassName(\"kcFormOptionsClass\")}\r\n          >\r\n            <div className={getClassName(\"kcFormOptionsWrapperClass\")}>\r\n              <span>\r\n                <a href={url.loginUrl}>{msg(\"backToLogin\")}</a>\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            id=\"kc-form-buttons\"\r\n            className={getClassName(\"kcFormButtonsClass\")}\r\n          >\r\n            <input\r\n              className={clsx(\r\n                getClassName(\"kcButtonClass\"),\r\n                getClassName(\"kcButtonPrimaryClass\"),\r\n                getClassName(\"kcButtonBlockClass\"),\r\n                getClassName(\"kcButtonLargeClass\")\r\n              )}\r\n              type=\"submit\"\r\n              value={msgStr(\"doRegister\")}\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </Template>\r\n  );\r\n}\r\n","import { clsx } from \"keycloakify/tools/clsx\";\nimport { useConstCallback } from \"keycloakify/tools/useConstCallback\";\n\nexport function createUseClassName<ClassKey extends string>(params: { defaultClasses: Record<ClassKey, string | undefined> }) {\n    const { defaultClasses } = params;\n\n    function useGetClassName(params: { doUseDefaultCss: boolean; classes: Partial<Record<ClassKey, string>> | undefined }) {\n        const { classes } = params;\n\n        const getClassName = useConstCallback((classKey: ClassKey): string => {\n            return clsx(classKey, defaultClasses[classKey], classes?.[classKey]);\n        });\n\n        return { getClassName };\n    }\n\n    return { useGetClassName };\n}\n","import { createUseClassName } from \"keycloakify/lib/useGetClassName\";\nimport type { ClassKey } from \"keycloakify/login/TemplateProps\";\n\nexport const { useGetClassName } = createUseClassName<ClassKey>({\n    \"defaultClasses\": {\n        \"kcBodyClass\": undefined,\n        \"kcHtmlClass\": \"login-pf\",\n        \"kcLoginClass\": \"login-pf-page\",\n        \"kcContentWrapperClass\": \"row\",\n        \"kcHeaderClass\": \"login-pf-page-header\",\n        \"kcHeaderWrapperClass\": undefined,\n        \"kcFormCardClass\": \"card-pf\",\n        \"kcFormCardAccountClass\": \"login-pf-accounts\",\n        \"kcFormSocialAccountClass\": \"login-pf-social-section\",\n        \"kcFormSocialAccountContentClass\": \"col-xs-12 col-sm-6\",\n        \"kcFormHeaderClass\": \"login-pf-header\",\n        \"kcLocaleWrapperClass\": undefined,\n        \"kcFeedbackErrorIcon\": \"pficon pficon-error-circle-o\",\n        \"kcFeedbackWarningIcon\": \"pficon pficon-warning-triangle-o\",\n        \"kcFeedbackSuccessIcon\": \"pficon pficon-ok\",\n        \"kcFeedbackInfoIcon\": \"pficon pficon-info\",\n        \"kcResetFlowIcon\": \"pficon pficon-arrow fa-2x\",\n        \"kcFormGroupClass\": \"form-group\",\n        \"kcLabelWrapperClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcSignUpClass\": \"login-pf-signup\",\n        \"kcInfoAreaWrapperClass\": undefined,\n\n        \"kcLogoClass\": \"login-pf-brand\",\n        \"kcContainerClass\": \"container-fluid\",\n        \"kcContentClass\": \"col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3 col-lg-6 col-lg-offset-3\",\n        \"kcFeedbackAreaClass\": \"col-md-12\",\n        \"kcLocaleClass\": \"col-xs-12 col-sm-1\",\n        \"kcAlertIconClasserror\": \"pficon pficon-error-circle-o\",\n\n        \"kcFormAreaClass\": \"col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2 col-lg-8 col-lg-offset-2\",\n        \"kcFormSocialAccountListClass\": \"login-pf-social list-unstyled login-pf-social-all\",\n        \"kcFormSocialAccountDoubleListClass\": \"login-pf-social-double-col\",\n        \"kcFormSocialAccountListLinkClass\": \"login-pf-social-link\",\n        \"kcWebAuthnKeyIcon\": \"pficon pficon-key\",\n        \"kcWebAuthnDefaultIcon\": \"pficon pficon-key\",\n\n        \"kcFormClass\": \"form-horizontal\",\n        \"kcFormGroupErrorClass\": \"has-error\",\n        \"kcLabelClass\": \"control-label\",\n        \"kcInputClass\": \"form-control\",\n        \"kcInputErrorMessageClass\": \"pf-c-form__helper-text pf-m-error required kc-feedback-text\",\n        \"kcInputWrapperClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormButtonsWrapperClass\": undefined,\n        \"kcFormOptionsClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormButtonsClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormSettingClass\": \"login-pf-settings\",\n        \"kcTextareaClass\": \"form-control\",\n\n        \"kcInfoAreaClass\": \"col-xs-12 col-sm-4 col-md-4 col-lg-5 details\",\n\n        // user-profile grouping\n        \"kcFormGroupHeader\": \"pf-c-form__group\",\n\n        // css classes for form buttons main class used for all buttons\n        \"kcButtonClass\": \"btn\",\n        // classes defining priority of the button - primary or default (there is typically only one priority button for the form)\n        \"kcButtonPrimaryClass\": \"btn-primary\",\n        \"kcButtonDefaultClass\": \"btn-default\",\n        // classes defining size of the button\n        \"kcButtonLargeClass\": \"btn-lg\",\n        \"kcButtonBlockClass\": \"btn-block\",\n\n        // css classes for input\n        \"kcInputLargeClass\": \"input-lg\",\n\n        // css classes for form accessability\n        \"kcSrOnlyClass\": \"sr-only\",\n\n        // css classes for select-authenticator form\n        \"kcSelectAuthListClass\": \"list-group list-view-pf\",\n        \"kcSelectAuthListItemClass\": \"list-group-item list-view-pf-stacked\",\n        \"kcSelectAuthListItemFillClass\": \"pf-l-split__item pf-m-fill\",\n        \"kcSelectAuthListItemIconPropertyClass\": \"fa-2x select-auth-box-icon-properties\",\n        \"kcSelectAuthListItemIconClass\": \"pf-l-split__item select-auth-box-icon\",\n        \"kcSelectAuthListItemTitle\": \"select-auth-box-paragraph\",\n        \"kcSelectAuthListItemInfoClass\": \"list-view-pf-main-info\",\n        \"kcSelectAuthListItemLeftClass\": \"list-view-pf-left\",\n        \"kcSelectAuthListItemBodyClass\": \"list-view-pf-body\",\n        \"kcSelectAuthListItemDescriptionClass\": \"list-view-pf-description\",\n        \"kcSelectAuthListItemHeadingClass\": \"list-group-item-heading\",\n        \"kcSelectAuthListItemHelpTextClass\": \"list-group-item-text\",\n\n        // css classes for the authenticators\n        \"kcAuthenticatorDefaultClass\": \"fa list-view-pf-icon-lg\",\n        \"kcAuthenticatorPasswordClass\": \"fa fa-unlock list-view-pf-icon-lg\",\n        \"kcAuthenticatorOTPClass\": \"fa fa-mobile list-view-pf-icon-lg\",\n        \"kcAuthenticatorWebAuthnClass\": \"fa fa-key list-view-pf-icon-lg\",\n        \"kcAuthenticatorWebAuthnPasswordlessClass\": \"fa fa-key list-view-pf-icon-lg\",\n\n        //css classes for the OTP Login Form\n        \"kcSelectOTPListClass\": \"card-pf card-pf-view card-pf-view-select card-pf-view-single-select\",\n        \"kcSelectOTPListItemClass\": \"card-pf-body card-pf-top-element\",\n        \"kcAuthenticatorOtpCircleClass\": \"fa fa-mobile card-pf-icon-circle\",\n        \"kcSelectOTPItemHeadingClass\": \"card-pf-title text-center\",\n        \"kcFormOptionsWrapperClass\": undefined\n    }\n});\n","import { assert } from \"tsafe/assert\";\nimport { typeGuard } from \"tsafe/typeGuard\";\n\nexport type CxArg = undefined | null | string | boolean | Partial<Record<string, boolean | null | undefined>> | readonly CxArg[];\n\nexport const clsx = (...args: CxArg[]): string => {\n    const len = args.length;\n    let i = 0;\n    let cls = \"\";\n    for (; i < len; i++) {\n        const arg = args[i];\n        if (arg == null) continue;\n\n        let toAdd;\n        switch (typeof arg) {\n            case \"boolean\":\n                break;\n            case \"object\": {\n                if (Array.isArray(arg)) {\n                    toAdd = clsx(...arg);\n                } else {\n                    assert(!typeGuard<{ length: number }>(arg, false));\n\n                    toAdd = \"\";\n                    for (const k in arg) {\n                        if (arg[k as string] && k) {\n                            toAdd && (toAdd += \" \");\n                            toAdd += k;\n                        }\n                    }\n                }\n                break;\n            }\n            default: {\n                toAdd = arg;\n            }\n        }\n        if (toAdd) {\n            cls && (cls += \" \");\n            cls += toAdd;\n        }\n    }\n    return cls;\n};\n","/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/** https://docs.tsafe.dev/typeguard */\nexport function typeGuard<T>(_value: any, isMatched: boolean): _value is T {\n    return isMatched;\n}\n"],"names":["Register","props","_register$formData$fi","_register$formData$la","_register$formData$em","_register$formData$us","kcContext","i18n","doUseDefaultCss","Template","classes","getClassName","useGetClassName","url","messagesPerField","register","realm","passwordRequired","recaptchaRequired","recaptchaSiteKey","msg","msgStr","_jsx","headerNode","children","_jsxs","id","className","action","registrationAction","method","clsx","printIfExists","htmlFor","type","name","defaultValue","formData","firstName","lastName","email","autoComplete","registrationEmailAsUsername","username","_Fragment","href","loginUrl","value","createUseClassName","params","defaultClasses","useConstCallback","classKey","undefined","len","arguments","length","i","cls","arg","toAdd","Array","isArray","apply","_toConsumableArray","k","assert","typeGuard","_value","isMatched"],"sourceRoot":""}