{"version":3,"file":"static/js/5738.bc921d0e.chunk.js","mappings":"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","sources":["keycloak-theme/login/pages/Login.tsx","../node_modules/keycloakify/src/lib/useGetClassName.ts","../node_modules/keycloakify/src/login/lib/useGetClassName.ts","../node_modules/keycloakify/src/tools/clsx.ts","../node_modules/oidc-spa/src/tools/urlQueryParams.ts","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/tsafe/src/typeGuard.ts"],"sourcesContent":["import { useState, type FormEventHandler } from \"react\";\r\nimport { clsx } from \"keycloakify/tools/clsx\";\r\nimport { useConstCallback } from \"keycloakify/tools/useConstCallback\";\r\nimport type { PageProps } from \"keycloakify/login/pages/PageProps\";\r\nimport { useGetClassName } from \"keycloakify/login/lib/useGetClassName\";\r\nimport type { KcContext } from \"../kcContext\";\r\nimport type { I18n } from \"../i18n\";\r\nimport { retrieveQueryParamFromUrl } from \"oidc-spa/tools/urlQueryParams\";\r\n\r\nconst result = retrieveQueryParamFromUrl({\r\n    \"url\": window.location.href,\r\n    \"name\": \"my_custom_param\",\r\n});\r\n\r\nif (result.wasPresent) {\r\n    console.log(\"my_custom_param\", result.value);\r\n}\r\n\r\n\r\nexport default function Login(props: PageProps<Extract<KcContext, { pageId: \"login.ftl\" }>, I18n>) {\r\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\r\n\r\n    const { getClassName } = useGetClassName({\r\n        doUseDefaultCss,\r\n        classes\r\n    });\r\n\r\n    const { social, realm, url, usernameHidden, login, auth, registrationDisabled } = kcContext;\r\n\r\n    const { msg, msgStr } = i18n;\r\n\r\n    const [isLoginButtonDisabled, setIsLoginButtonDisabled] = useState(false);\r\n\r\n    const onSubmit = useConstCallback<FormEventHandler<HTMLFormElement>>(e => {\r\n        e.preventDefault();\r\n\r\n        setIsLoginButtonDisabled(true);\r\n\r\n        const formElement = e.target as HTMLFormElement;\r\n\r\n        //NOTE: Even if we login with email Keycloak expect username and password in\r\n        //the POST request.\r\n        formElement.querySelector(\"input[name='email']\")?.setAttribute(\"name\", \"username\");\r\n\r\n        formElement.submit();\r\n    });\r\n\r\n    return (\r\n        <Template\r\n            {...{ kcContext, i18n, doUseDefaultCss, classes }}\r\n            displayInfo={social.displayInfo}\r\n            displayWide={realm.password && social.providers !== undefined}\r\n            headerNode={msg(\"doLogIn\")}\r\n            // infoNode={\r\n            //     realm.password &&\r\n            //     realm.registrationAllowed &&\r\n            //     !registrationDisabled && (\r\n            //         <div id=\"kc-registration\">\r\n            //             <span>\r\n            //                 {msg(\"noAccount\")}\r\n            //                 <a tabIndex={6} href={url.registrationUrl}>\r\n            //                     {msg(\"doRegister\")}\r\n            //                 </a>\r\n            //             </span>\r\n            //         </div>\r\n            //     )\r\n            // }\r\n        >\r\n            <div id=\"kc-form\" className={clsx(realm.password && social.providers !== undefined && getClassName(\"kcContentWrapperClass\"))}>\r\n                <div\r\n                    id=\"kc-form-wrapper\"\r\n                    className={clsx(\r\n                        realm.password &&\r\n                        social.providers && [getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\")]\r\n                    )}\r\n                >\r\n                    {realm.password && (\r\n                        <form id=\"kc-form-login\" onSubmit={onSubmit} action={url.loginAction} method=\"post\">\r\n                            <div className={getClassName(\"kcFormGroupClass\")}>\r\n                                {!usernameHidden &&\r\n                                    (() => {\r\n                                        const label = !realm.loginWithEmailAllowed\r\n                                            ? \"username\"\r\n                                            : realm.registrationEmailAsUsername\r\n                                                ? \"email\"\r\n                                                : \"usernameOrEmail\";\r\n\r\n                                        const autoCompleteHelper: typeof label = label === \"usernameOrEmail\" ? \"username\" : label;\r\n\r\n                                        return (\r\n                                            <>\r\n                                                <label htmlFor={autoCompleteHelper} className={getClassName(\"kcLabelClass\")}>\r\n                                                    {msg(label)}\r\n                                                </label>\r\n                                                <input\r\n                                                    tabIndex={1}\r\n                                                    id={autoCompleteHelper}\r\n                                                    className={getClassName(\"kcInputClass\")}\r\n                                                    //NOTE: This is used by Google Chrome auto fill so we use it to tell\r\n                                                    //the browser how to pre fill the form but before submit we put it back\r\n                                                    //to username because it is what keycloak expects.\r\n                                                    name={autoCompleteHelper}\r\n                                                    defaultValue={login.username ?? \"\"}\r\n                                                    type=\"text\"\r\n                                                    autoFocus={true}\r\n                                                    autoComplete=\"off\"\r\n                                                />\r\n                                            </>\r\n                                        );\r\n                                    })()}\r\n                            </div>\r\n                            <div className={getClassName(\"kcFormGroupClass\")}>\r\n                                <label htmlFor=\"password\" className={getClassName(\"kcLabelClass\")}>\r\n                                    {msg(\"password\")}\r\n                                </label>\r\n                                <input\r\n                                    tabIndex={2}\r\n                                    id=\"password\"\r\n                                    className={getClassName(\"kcInputClass\")}\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    autoComplete=\"off\"\r\n                                />\r\n                            </div>\r\n                            {/* <div className={clsx(getClassName(\"kcFormGroupClass\"), getClassName(\"kcFormSettingClass\"))}>\r\n                                <div id=\"kc-form-options\">\r\n                                    {realm.rememberMe && !usernameHidden && (\r\n                                        <div className=\"checkbox\">\r\n                                            <label>\r\n                                                <input\r\n                                                    tabIndex={3}\r\n                                                    id=\"rememberMe\"\r\n                                                    name=\"rememberMe\"\r\n                                                    type=\"checkbox\"\r\n                                                    {...(login.rememberMe === \"on\"\r\n                                                        ? {\r\n                                                            \"checked\": true\r\n                                                        }\r\n                                                        : {})}\r\n                                                />\r\n                                                {msg(\"rememberMe\")}\r\n                                            </label>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                                <div className={getClassName(\"kcFormOptionsWrapperClass\")}>\r\n                                    {realm.resetPasswordAllowed && (\r\n                                        <span>\r\n                                            <a tabIndex={5} href={url.loginResetCredentialsUrl}>\r\n                                                {msg(\"doForgotPassword\")}\r\n                                            </a>\r\n                                        </span>\r\n                                    )}\r\n                                </div>\r\n                            </div> */}\r\n                            {/* fogot password */}\r\n                            <div id=\"kc-form-buttons\" className={getClassName(\"kcFormGroupClass\")}>\r\n                                <input\r\n                                    type=\"hidden\"\r\n                                    id=\"id-hidden-input\"\r\n                                    name=\"credentialId\"\r\n                                    {...(auth?.selectedCredential !== undefined\r\n                                        ? {\r\n                                            \"value\": auth.selectedCredential\r\n                                        }\r\n                                        : {})}\r\n                                />\r\n                                <input\r\n                                    tabIndex={4}\r\n                                    className={clsx(\r\n                                        getClassName(\"kcButtonClass\"),\r\n                                        getClassName(\"kcButtonPrimaryClass\"),\r\n                                        getClassName(\"kcButtonBlockClass\"),\r\n                                        getClassName(\"kcButtonLargeClass\")\r\n                                    )}\r\n                                    name=\"login\"\r\n                                    id=\"kc-login\"\r\n                                    type=\"submit\"\r\n                                    value={msgStr(\"doLogIn\")}\r\n                                    disabled={isLoginButtonDisabled}\r\n                                />\r\n                            </div> \r\n                            {/* button submit */}\r\n                        </form>\r\n                    )}\r\n                </div>\r\n                {realm.password && social.providers !== undefined && (\r\n                    <div\r\n                        id=\"kc-social-providers\"\r\n                        className={clsx(getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\"))}\r\n                    >\r\n                        <ul\r\n                            className={clsx(\r\n                                getClassName(\"kcFormSocialAccountListClass\"),\r\n                                social.providers.length > 4 && getClassName(\"kcFormSocialAccountDoubleListClass\")\r\n                            )}\r\n                        >\r\n                            {social.providers.map(p => (\r\n                                <li key={p.providerId} className={getClassName(\"kcFormSocialAccountListLinkClass\")}>\r\n                                    <a href={p.loginUrl} id={`zocial-${p.alias}`} className={clsx(\"zocial\", p.providerId)}>\r\n                                        <span>{p.displayName}</span>\r\n                                    </a>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </Template>\r\n    );\r\n}\r\n","import { clsx } from \"keycloakify/tools/clsx\";\nimport { useConstCallback } from \"keycloakify/tools/useConstCallback\";\n\nexport function createUseClassName<ClassKey extends string>(params: { defaultClasses: Record<ClassKey, string | undefined> }) {\n    const { defaultClasses } = params;\n\n    function useGetClassName(params: { doUseDefaultCss: boolean; classes: Partial<Record<ClassKey, string>> | undefined }) {\n        const { classes } = params;\n\n        const getClassName = useConstCallback((classKey: ClassKey): string => {\n            return clsx(classKey, defaultClasses[classKey], classes?.[classKey]);\n        });\n\n        return { getClassName };\n    }\n\n    return { useGetClassName };\n}\n","import { createUseClassName } from \"keycloakify/lib/useGetClassName\";\nimport type { ClassKey } from \"keycloakify/login/TemplateProps\";\n\nexport const { useGetClassName } = createUseClassName<ClassKey>({\n    \"defaultClasses\": {\n        \"kcBodyClass\": undefined,\n        \"kcHtmlClass\": \"login-pf\",\n        \"kcLoginClass\": \"login-pf-page\",\n        \"kcContentWrapperClass\": \"row\",\n        \"kcHeaderClass\": \"login-pf-page-header\",\n        \"kcHeaderWrapperClass\": undefined,\n        \"kcFormCardClass\": \"card-pf\",\n        \"kcFormCardAccountClass\": \"login-pf-accounts\",\n        \"kcFormSocialAccountClass\": \"login-pf-social-section\",\n        \"kcFormSocialAccountContentClass\": \"col-xs-12 col-sm-6\",\n        \"kcFormHeaderClass\": \"login-pf-header\",\n        \"kcLocaleWrapperClass\": undefined,\n        \"kcFeedbackErrorIcon\": \"pficon pficon-error-circle-o\",\n        \"kcFeedbackWarningIcon\": \"pficon pficon-warning-triangle-o\",\n        \"kcFeedbackSuccessIcon\": \"pficon pficon-ok\",\n        \"kcFeedbackInfoIcon\": \"pficon pficon-info\",\n        \"kcResetFlowIcon\": \"pficon pficon-arrow fa-2x\",\n        \"kcFormGroupClass\": \"form-group\",\n        \"kcLabelWrapperClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcSignUpClass\": \"login-pf-signup\",\n        \"kcInfoAreaWrapperClass\": undefined,\n\n        \"kcLogoClass\": \"login-pf-brand\",\n        \"kcContainerClass\": \"container-fluid\",\n        \"kcContentClass\": \"col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3 col-lg-6 col-lg-offset-3\",\n        \"kcFeedbackAreaClass\": \"col-md-12\",\n        \"kcLocaleClass\": \"col-xs-12 col-sm-1\",\n        \"kcAlertIconClasserror\": \"pficon pficon-error-circle-o\",\n\n        \"kcFormAreaClass\": \"col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2 col-lg-8 col-lg-offset-2\",\n        \"kcFormSocialAccountListClass\": \"login-pf-social list-unstyled login-pf-social-all\",\n        \"kcFormSocialAccountDoubleListClass\": \"login-pf-social-double-col\",\n        \"kcFormSocialAccountListLinkClass\": \"login-pf-social-link\",\n        \"kcWebAuthnKeyIcon\": \"pficon pficon-key\",\n        \"kcWebAuthnDefaultIcon\": \"pficon pficon-key\",\n\n        \"kcFormClass\": \"form-horizontal\",\n        \"kcFormGroupErrorClass\": \"has-error\",\n        \"kcLabelClass\": \"control-label\",\n        \"kcInputClass\": \"form-control\",\n        \"kcInputErrorMessageClass\": \"pf-c-form__helper-text pf-m-error required kc-feedback-text\",\n        \"kcInputWrapperClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormButtonsWrapperClass\": undefined,\n        \"kcFormOptionsClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormButtonsClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormSettingClass\": \"login-pf-settings\",\n        \"kcTextareaClass\": \"form-control\",\n\n        \"kcInfoAreaClass\": \"col-xs-12 col-sm-4 col-md-4 col-lg-5 details\",\n\n        // user-profile grouping\n        \"kcFormGroupHeader\": \"pf-c-form__group\",\n\n        // css classes for form buttons main class used for all buttons\n        \"kcButtonClass\": \"btn\",\n        // classes defining priority of the button - primary or default (there is typically only one priority button for the form)\n        \"kcButtonPrimaryClass\": \"btn-primary\",\n        \"kcButtonDefaultClass\": \"btn-default\",\n        // classes defining size of the button\n        \"kcButtonLargeClass\": \"btn-lg\",\n        \"kcButtonBlockClass\": \"btn-block\",\n\n        // css classes for input\n        \"kcInputLargeClass\": \"input-lg\",\n\n        // css classes for form accessability\n        \"kcSrOnlyClass\": \"sr-only\",\n\n        // css classes for select-authenticator form\n        \"kcSelectAuthListClass\": \"list-group list-view-pf\",\n        \"kcSelectAuthListItemClass\": \"list-group-item list-view-pf-stacked\",\n        \"kcSelectAuthListItemFillClass\": \"pf-l-split__item pf-m-fill\",\n        \"kcSelectAuthListItemIconPropertyClass\": \"fa-2x select-auth-box-icon-properties\",\n        \"kcSelectAuthListItemIconClass\": \"pf-l-split__item select-auth-box-icon\",\n        \"kcSelectAuthListItemTitle\": \"select-auth-box-paragraph\",\n        \"kcSelectAuthListItemInfoClass\": \"list-view-pf-main-info\",\n        \"kcSelectAuthListItemLeftClass\": \"list-view-pf-left\",\n        \"kcSelectAuthListItemBodyClass\": \"list-view-pf-body\",\n        \"kcSelectAuthListItemDescriptionClass\": \"list-view-pf-description\",\n        \"kcSelectAuthListItemHeadingClass\": \"list-group-item-heading\",\n        \"kcSelectAuthListItemHelpTextClass\": \"list-group-item-text\",\n\n        // css classes for the authenticators\n        \"kcAuthenticatorDefaultClass\": \"fa list-view-pf-icon-lg\",\n        \"kcAuthenticatorPasswordClass\": \"fa fa-unlock list-view-pf-icon-lg\",\n        \"kcAuthenticatorOTPClass\": \"fa fa-mobile list-view-pf-icon-lg\",\n        \"kcAuthenticatorWebAuthnClass\": \"fa fa-key list-view-pf-icon-lg\",\n        \"kcAuthenticatorWebAuthnPasswordlessClass\": \"fa fa-key list-view-pf-icon-lg\",\n\n        //css classes for the OTP Login Form\n        \"kcSelectOTPListClass\": \"card-pf card-pf-view card-pf-view-select card-pf-view-single-select\",\n        \"kcSelectOTPListItemClass\": \"card-pf-body card-pf-top-element\",\n        \"kcAuthenticatorOtpCircleClass\": \"fa fa-mobile card-pf-icon-circle\",\n        \"kcSelectOTPItemHeadingClass\": \"card-pf-title text-center\",\n        \"kcFormOptionsWrapperClass\": undefined\n    }\n});\n","import { assert } from \"tsafe/assert\";\nimport { typeGuard } from \"tsafe/typeGuard\";\n\nexport type CxArg = undefined | null | string | boolean | Partial<Record<string, boolean | null | undefined>> | readonly CxArg[];\n\nexport const clsx = (...args: CxArg[]): string => {\n    const len = args.length;\n    let i = 0;\n    let cls = \"\";\n    for (; i < len; i++) {\n        const arg = args[i];\n        if (arg == null) continue;\n\n        let toAdd;\n        switch (typeof arg) {\n            case \"boolean\":\n                break;\n            case \"object\": {\n                if (Array.isArray(arg)) {\n                    toAdd = clsx(...arg);\n                } else {\n                    assert(!typeGuard<{ length: number }>(arg, false));\n\n                    toAdd = \"\";\n                    for (const k in arg) {\n                        if (arg[k as string] && k) {\n                            toAdd && (toAdd += \" \");\n                            toAdd += k;\n                        }\n                    }\n                }\n                break;\n            }\n            default: {\n                toAdd = arg;\n            }\n        }\n        if (toAdd) {\n            cls && (cls += \" \");\n            cls += toAdd;\n        }\n    }\n    return cls;\n};\n","export function addQueryParamToUrl(params: { url: string; name: string; value: string }): {\n    newUrl: string;\n} {\n    const { url, name, value } = params;\n\n    let newUrl = url;\n\n    const result = retrieveQueryParamFromUrl({\n        url,\n        name\n    });\n\n    if (result.wasPresent) {\n        newUrl = result.newUrl;\n    }\n\n    newUrl += `${\n        newUrl.includes(\"?\") ? \"&\" : newUrl.endsWith(\"?\") ? \"\" : \"?\"\n    }${name}=${encodeURIComponent(value)}`;\n\n    return { newUrl };\n}\n\nexport function retrieveAllQueryParamStartingWithPrefixFromUrl<\n    Prefix extends string,\n    DoLeave extends boolean\n>(params: {\n    url: string;\n    prefix: Prefix;\n    doLeavePrefixInResults: DoLeave;\n}): { newUrl: string; values: Record<DoLeave extends true ? `${Prefix}${string}` : string, string> } {\n    const { url, prefix, doLeavePrefixInResults } = params;\n\n    const [baseUrl, locationSearch = \"\"] = url.split(\"?\");\n\n    const values: Record<string, string> = {};\n\n    const { newLocationSearch } = (() => {\n        let newLocationSearch = locationSearch\n            .replace(/^\\?/, \"\")\n            .split(\"&\")\n            .map(part => part.split(\"=\") as [string, string])\n            .filter(([key, value_i]) =>\n                !key.startsWith(prefix)\n                    ? true\n                    : ((values[doLeavePrefixInResults ? key : key.substring(prefix.length)] =\n                          decodeURIComponent(value_i)),\n                      false)\n            )\n            .map(entry => entry.join(\"=\"))\n            .join(\"&\");\n        newLocationSearch = newLocationSearch === \"\" ? \"\" : `?${newLocationSearch}`;\n\n        return { newLocationSearch };\n    })();\n\n    return {\n        \"newUrl\": `${baseUrl}${newLocationSearch}`,\n        values\n    };\n}\n\nexport function retrieveQueryParamFromUrl(params: {\n    url: string;\n    name: string;\n}): { wasPresent: false } | { wasPresent: true; newUrl: string; value: string } {\n    const { url, name } = params;\n\n    const { newUrl, values } = retrieveAllQueryParamStartingWithPrefixFromUrl({\n        url,\n        \"prefix\": name,\n        \"doLeavePrefixInResults\": true\n    });\n\n    return name in values\n        ? {\n              \"wasPresent\": true,\n              newUrl,\n              \"value\": values[name]\n          }\n        : {\n              \"wasPresent\": false\n          };\n}\n","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/** https://docs.tsafe.dev/typeguard */\nexport function typeGuard<T>(_value: any, isMatched: boolean): _value is T {\n    return isMatched;\n}\n"],"names":["result","retrieveQueryParamFromUrl","window","location","href","Login","props","kcContext","i18n","doUseDefaultCss","Template","classes","getClassName","useGetClassName","social","realm","url","usernameHidden","login","auth","msg","registrationDisabled","msgStr","_useState","useState","_useState2","_slicedToArray","isLoginButtonDisabled","setIsLoginButtonDisabled","onSubmit","useConstCallback","e","_formElement$querySel","preventDefault","formElement","target","querySelector","setAttribute","submit","_jsx","displayInfo","displayWide","password","undefined","providers","headerNode","children","_jsxs","id","className","clsx","action","loginAction","method","_login$username","label","loginWithEmailAllowed","registrationEmailAsUsername","autoCompleteHelper","_Fragment","htmlFor","tabIndex","name","defaultValue","username","type","autoFocus","autoComplete","_objectSpread","selectedCredential","value","disabled","length","map","p","loginUrl","concat","alias","providerId","displayName","wasPresent","console","log","createUseClassName","params","defaultClasses","classKey","len","arguments","i","cls","arg","toAdd","Array","isArray","apply","_toConsumableArray","k","assert","typeGuard","retrieveAllQueryParamStartingWithPrefixFromUrl","prefix","doLeavePrefixInResults","_a","__read","split","baseUrl","_b","locationSearch","values","newLocationSearch","replace","part","filter","key","value_i","startsWith","substring","decodeURIComponent","entry","join","newUrl","exports","includes","endsWith","encodeURIComponent","_toPropertyKey","input","hint","prim","Symbol","toPrimitive","res","call","TypeError","String","Number","_defineProperty","obj","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","push","_objectSpread2","source","forEach","getOwnPropertyDescriptors","defineProperties","_value","isMatched"],"sourceRoot":""}